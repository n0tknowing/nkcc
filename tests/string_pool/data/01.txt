Except
I
use
my
own
terms
existing
string
in
the
pool
include
assert
h
include
stdio
h
include
stdlib
h
include
string
h
include
define
MAX
x
y
x
y
x
y
define
MIN
x
y
x
y
x
y
define
DEFAULT_BLOCK_SIZE
define
DEFAULT_BLOCK_CAPA
define
DEFAULT_POOL_CAPA
typedef
struct
char
pointer
unsigned
int
used
unsigned
int
capacity
string_block
typedef
struct
string_block
blk
DEFAULT_BLOCK_CAPA
unsigned
int
start
unsigned
int
used
string_allocator
static
string_allocator
g_allocator
static
unsigned
int
pow2_roundup
unsigned
int
x
x
x
x
u
x
x
u
x
x
u
x
x
u
x
x
u
x
return
x
static
void
__allocator_setup
void
char
pointer
string_block
blk
pointer
calloc
DEFAULT_BLOCK_SIZE
assert
pointer
NULL
blk
g_allocator
blk
blk
pointer
pointer
blk
used
blk
capacity
DEFAULT_BLOCK_SIZE
g_allocator
start
g_allocator
used
static
void
__allocator_cleanup
void
unsigned
int
i
ifdef
STRING_POOL_DEBUG
unsigned
int
remain
endif
for
i
i
g_allocator
used
i
ifdef
STRING_POOL_DEBUG
remain
g_allocator
blk
i
capacity
g_allocator
blk
i
used
printf
__func__
i
remain
endif
free
g_allocator
blk
i
pointer
static
char
__allocate
unsigned
int
__size
char
pointer
string_block
blk
unsigned
int
size
probe
new_probe
if
g_allocator
used
DEFAULT_BLOCK_CAPA
goto
oom
pointer
NULL
for
probe
g_allocator
start
probe
DEFAULT_BLOCK_CAPA
probe
blk
g_allocator
blk
probe
size
blk
used
__size
if
size
blk
capacity
pointer
blk
pointer
blk
used
blk
used
size
ifdef
STRING_POOL_DEBUG
printf
__func__
__size
probe
printf
__func__
probe
blk
capacity
blk
used
endif
break
else
if
blk
pointer
NULL
blk
capacity
MAX
DEFAULT_BLOCK_SIZE
pow2_roundup
__size
blk
pointer
calloc
blk
capacity
assert
blk
pointer
NULL
ifdef
STRING_POOL_DEBUG
printf
__func__
probe
blk
capacity
printf
__func__
__size
probe
endif
pointer
blk
pointer
blk
used
size
g_allocator
used
break
ifdef
STRING_POOL_DEBUG
printf
__func__
__size
probe
printf
__func__
probe
blk
capacity
blk
used
endif
for
new_probe
g_allocator
start
new_probe
probe
new_probe
blk
g_allocator
blk
new_probe
if
blk
capacity
blk
used
g_allocator
start
break
ifdef
STRING_POOL_DEBUG
printf
__func__
g_allocator
start
endif
if
pointer
NULL
return
pointer
oom
fprintf
stderr
__allocator_cleanup
exit
return
NULL
static
unsigned
int
__do_hash
const
char
data
unsigned
int
hash
x811c9dc5U
while
data
hash
data
hash
x1000193U
return
hash
static
string_ref
__lookup_pool
string_pool_t
pool
const
char
s0
unsigned
int
hash
unsigned
int
len
unsigned
int
idx
idx
hash
pool
capacity
while
string_ref
s1
pool
strings
idx
if
s1
data
NULL
break
if
s1
hash
hash
s1
len
len
memcmp
s1
data
s0
len
return
s1
idx
idx
pool
capacity
return
NULL
static
void
__try_grow_pool
string_pool_t
pool
string_ref
new_strings
unsigned
int
new_capacity
i
idx
if
pool
count
pool
load_factor
return
new_capacity
pool
capacity
new_strings
calloc
new_capacity
sizeof
string_ref
assert
new_strings
NULL
for
i
i
pool
capacity
i
string_ref
str
pool
strings
i
if
str
data
NULL
continue
idx
str
hash
new_capacity
while
if
new_strings
idx
data
NULL
new_strings
idx
str
break
idx
idx
new_capacity
free
pool
strings
pool
strings
new_strings
pool
capacity
new_capacity
pool
load_factor
unsigned
int
double
new_capacity
void
string_pool_setup
string_pool_t
pool
string_ref
strings
strings
calloc
DEFAULT_POOL_CAPA
sizeof
string_ref
assert
strings
NULL
__allocator_setup
pool
strings
strings
pool
count
pool
capacity
DEFAULT_POOL_CAPA
pool
load_factor
unsigned
int
double
DEFAULT_POOL_CAPA
void
string_pool_cleanup
string_pool_t
pool
__allocator_cleanup
free
pool
strings
pool
strings
NULL
pool
count
pool
capacity
pool
load_factor
string_ref
string_ref_newlen
string_pool_t
pool
const
char
s
unsigned
int
len
char
data
string_ref
str
pstr
unsigned
int
hash
idx
hash
__do_hash
s
if
pstr
__lookup_pool
pool
s
hash
len
NULL
return
pstr
__try_grow_pool
pool
data
__allocate
len
memcpy
data
s
len
str
data
data
str
len
len
str
hash
hash
idx
hash
pool
capacity
while
pstr
pool
strings
idx
if
pstr
data
NULL
pstr
str
pool
count
break
idx
idx
pool
capacity
return
str
string_ref
string_ref_new
string_pool_t
pool
const
char
s
return
string_ref_newlen
pool
s
strlen
s
int
string_ref_cmp
string_ref
r0
string_ref
r1
return
int
r0
len
int
r1
len
r0
data
r1
data
